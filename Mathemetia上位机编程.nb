(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34704,        776]
NotebookOptionsPosition[     34293,        757]
NotebookOutlinePosition[     34649,        773]
CellTagsIndexPosition[     34606,        770]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"dev", "=", 
  RowBox[{"DeviceOpen", "[", 
   RowBox[{"\"\<Serial\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<COM3\>\"", ",", 
      RowBox[{"\"\<BaudRate\>\"", "\[Rule]", "115200"}], ",", 
      RowBox[{"\"\<DataBits\>\"", "\[Rule]", "8"}], ",", 
      RowBox[{"\"\<StopBits\>\"", "\[Rule]", "1"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.668569118744073*^9, {3.66857324326556*^9, 3.668573246968156*^9}, 
   3.668573575065405*^9, 3.6685912578104506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM3)", "Not connected (COM3)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{126., {5., 10.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM3)", "Not connected (COM3)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Serial", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Serial", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.668591258659238*^9, 3.6686607515097656`*^9, 
  3.6686626564394217`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "dev", "]"}]], "Input",
 CellChangeTimes->{{3.668497455245242*^9, 3.668497459928926*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "RunScheduledTask", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DeviceReadBuffer", "[", "dev", "]"}], ";", 
      RowBox[{"DeviceReadBuffer", "[", "dev", "]"}], ";", 
      RowBox[{"DeviceWrite", "[", 
       RowBox[{"dev", ",", "\"\<1\>\""}], "]"}], ";", 
      RowBox[{"Pause", "[", "10", "]"}], ";", 
      RowBox[{"Day1data", "=", 
       RowBox[{"FromCharacterCode", "[", 
        RowBox[{"DeviceReadBuffer", "[", "dev", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"volt1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", "48"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"volt2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", "48"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", "48"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"press", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", "48"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"volt1", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                    RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}]}], ",", 
          RowBox[{
           RowBox[{"volt2", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                    RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "1000"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                    RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "/", "100"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"press", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                    RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "/", "10000"}]}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "48"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"now", "=", 
       RowBox[{"DateObject", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aweekago", "=", 
       RowBox[{"DateObject", "[", 
        RowBox[{
         RowBox[{"DayPlus", "[", 
          RowBox[{"now", ",", 
           RowBox[{"-", "7"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "49", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"label", "=", 
       RowBox[{"\"\<  Volt1=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "48", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}], "]"}], 
         "]"}], "<>", "\"\<v   Volt2=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "48", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "1000"}], "]"}], 
         "]"}], "<>", "\[IndentingNewLine]", "\"\<v\\nTemp=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "48", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "/", "10"}], "]"}], "]"}],
         "<>", "\"\<'C      Press=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Interpreter", "[", "List", "]"}], "[", 
                   RowBox[{"ToString", "[", "Day1data", "]"}], "]"}], "[", 
                  RowBox[{"[", "48", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], "/", "1000"}], "]"}], 
         "]"}], "<>", "\"\<kPa\\n  \>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pic", "=", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"volt1", ",", "volt2", ",", "temp", ",", "press"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"aweekago", ",", "now"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Volt1", ",", "Volt2", ",", "Temp", ",", "Press"}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "label"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"CloudDeploy", "[", 
       RowBox[{
        RowBox[{"ExportForm", "[", 
         RowBox[{"pic", ",", "\"\<GIF\>\""}], "]"}], ",", "\"\<121270014\>\"",
         ",", 
        RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
     "}"}], ",", "60"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.668571929677458*^9, 3.6685720126748977`*^9}, {
   3.6685721345266495`*^9, 3.6685721396099825`*^9}, {3.6685727354179587`*^9, 
   3.6685727600636673`*^9}, 3.66857295802592*^9, {3.6685731404625864`*^9, 
   3.6685731470151587`*^9}, {3.668573181215164*^9, 3.6685731894305906`*^9}, {
   3.668573380351791*^9, 3.6685734233007693`*^9}, {3.668573480406887*^9, 
   3.668573503321865*^9}, {3.6685735393097725`*^9, 3.66857354695149*^9}, 
   3.66857382143976*^9, 3.6685771055113215`*^9, {3.6685771986324873`*^9, 
   3.6685772010769405`*^9}, {3.6685893176570663`*^9, 
   3.6685893535622535`*^9}, {3.6685900121551075`*^9, 
   3.6685900169522777`*^9}, {3.6685908084964685`*^9, 3.6685908427900248`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (2015\:5e747\:67087\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 500, 12, 48, "Input"],
Cell[1083, 36, 17044, 339, 79, "Output"]
}, Open  ]],
Cell[18142, 378, 132, 2, 48, "Input"],
Cell[18277, 382, 16012, 373, 1289, "Input"]
}
]
*)

(* End of internal cache information *)
